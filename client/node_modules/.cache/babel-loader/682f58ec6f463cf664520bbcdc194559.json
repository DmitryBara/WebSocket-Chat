{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/CreateChatPage.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { useMessage } from '../hooks/message.hook';\nexport const CreateChatPage = () => {\n  // Import myself created hooks and other hooks\n  const auth = useContext(AuthContext);\n  const [chatname, setChatname] = useState('');\n  const [isChatPrivate, setIsChatPrivate] = useState(false); // Show error message in case of backend errors\n\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const message = useMessage();\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const submitHandler = async () => {\n    try {\n      // Should make request (from useHttp hook) on backend with Headers['Authorization']=token\n      const data = await request('/api/chat/create', 'POST', {\n        chatname,\n        private: isChatPrivate\n      }, {\n        Authorization: `Bearer ${auth.token}`\n      });\n      message(data.message);\n      console.log(data);\n    } catch (e) {}\n  };\n\n  const pressHandler = event => {\n    if (event.key === 'Enter' && !!chatname) {\n      submitHandler();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row blue lighten-3\",\n    id: \"cont-create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s8 offset-s2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"white-text\",\n    style: {\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"New Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"chatname\",\n    name: \"chatname\",\n    type: \"text\",\n    value: chatname,\n    onChange: e => setChatname(e.target.value),\n    onKeyPress: pressHandler,\n    maxLength: \"50\",\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"chatname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Chat Name\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    className: \"white white-text\",\n    type: \"checkbox\",\n    value: isChatPrivate,\n    onChange: () => setIsChatPrivate(!isChatPrivate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Make this chat private (acces by link)\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn yellow green-text\",\n    onClick: submitHandler,\n    disabled: !chatname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Create!\"))));\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/CreateChatPage.js"],"names":["React","useState","useEffect","useContext","useHttp","AuthContext","useMessage","CreateChatPage","auth","chatname","setChatname","isChatPrivate","setIsChatPrivate","loading","error","request","clearError","message","submitHandler","data","private","Authorization","token","console","log","e","pressHandler","event","key","marginBottom","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {useHttp} from '../hooks/http.hook'\nimport {AuthContext} from '../context/AuthContext'\nimport {useMessage} from '../hooks/message.hook'\n\n\nexport const CreateChatPage = () => {\n\n  // Import myself created hooks and other hooks\n  const auth = useContext(AuthContext)\n  const [chatname, setChatname] = useState('')\n  const [isChatPrivate, setIsChatPrivate] = useState(false)\n\n  // Show error message in case of backend errors\n  const {loading, error, request, clearError} = useHttp()\n  const message = useMessage()\n  useEffect( () => {\n    message(error)\n    clearError()\n  }, [error, message, clearError])\n\n\n\n\n  const submitHandler = async () => {\n    try {\n      // Should make request (from useHttp hook) on backend with Headers['Authorization']=token\n      const data = await \n      request(\n        '/api/chat/create', \n        'POST', \n        {chatname, private: isChatPrivate},\n        {Authorization: `Bearer ${auth.token}`}\n      )\n      message(data.message)\n      console.log(data)\n\n\n    } catch (e) {}\n  }\n  \n\n  const pressHandler = (event) => {\n    if (event.key === 'Enter' && !!chatname) { submitHandler() }\n  }\n\n\n  return (\n    <div className=\"row blue lighten-3\" id=\"cont-create\">\n      <div className=\"col s8 offset-s2\">\n        <h4 className=\"white-text\" style={{ marginBottom: '2rem'}}>New Chat</h4>\n        <div className=\"input-field\">\n          \n          <input \n            id=\"chatname\" \n            name=\"chatname\"\n            type=\"text\"\n            value={chatname}\n            onChange={ e => setChatname(e.target.value) }\n            onKeyPress = {pressHandler}\n            maxLength=\"50\"\n            className=\"field\" \n            />\n          <label htmlFor=\"chatname\">Chat Name</label>\n          \n          <p>\n            <label htmlFor=\"password\">\n              <input \n                id=\"password\" \n                className=\"white white-text\" \n                type=\"checkbox\"\n                value={isChatPrivate}\n                onChange={ () => setIsChatPrivate(!isChatPrivate) }\n                />\n              <span className=\"white-text\">Make this chat private (acces by link)</span>\n            </label>\n          </p>\n\n          <button \n            className=\"btn yellow green-text\" \n            onClick={submitHandler} \n            disabled={!chatname}>\n            Create!\n          </button>\n\n        </div>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}