{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/ChatWorkerComp.js\";\nimport React, { useContext } from 'react';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { СhatArea } from './ChatAreaComp';\nexport const ChatWorker = ({\n  chat,\n  token,\n  chatId,\n  socket,\n  allMessages\n}) => {\n  const auth = useContext(AuthContext);\n  const userId = auth.userId; // Indicator for updating component\n  // By default instance of listMessages is the same\n  // On every iteration, useState don't see changes\n\n  /* eslint-disable-next-line */\n\n  const [news, setNews] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [listMessages, setListMessages] = useState([]);\n\n  var sendHandler = event => {\n    event.preventDefault();\n    const newMessageFromClient = event.target.elements.newMessageInput.value;\n    event.target.elements.newMessageInput.value = null;\n    socket.emit('New message from client', newMessageFromClient, chatId, userId);\n  }; // Initialize socket listeners and emit when user connected\n\n\n  const createSocket = useCallback(() => {\n    socket.on('New user message from server', newMessage => {\n      setListMessages(allMessages(newMessage, null));\n      setNews(newMessage); // scrollToBottom()\n    });\n    socket.on('Refresh online users', onUsers => {\n      var logins = onUsers.map(i => i.login);\n      setOnlineUsers(logins);\n      console.log(logins); // console.log(onlineUsers)\n    });\n    socket.on('Old messages', async oldMessages => {\n      setListMessages(allMessages(null, oldMessages)); // scrollToBottom()\n    }); // Make emit to server\n\n    socket.emit('Client just enter', chatId, userId);\n    /* eslint-disable-next-line */\n  }, [chatId, userId]); // Run when page will loading\n\n  useEffect(() => {\n    createSocket();\n  }, [createSocket]); // AutoScroll down\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    if (listMessages) {\n      console.log('here: ', listMessages);\n    }\n  }, [news]); // console.log(listMessages)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '2rem',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    hreaf: \"/\",\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 59\n    }\n  }, \" near_me \"), \" Chat \"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 58\n    }\n  }, \"live_tv\"), \" *Video Call* \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    style: {\n      marginLeft: '-0.75rem',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card blue lighten-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content black-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title pink-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \" \", chat.chatname, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"online-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title pink-text\",\n    id: \"online-word\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \" Online: \", '\\u00A0', \" \"), onlineUsers.map((login, index) => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      id: \"one-online\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \" \", login, \", \", '\\u00A0', \" \");\n  })), listMessages.length && /*#__PURE__*/React.createElement(СhatArea, {\n    listMessages: listMessages,\n    messagesEndRef: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 36\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"chat-form\",\n    onSubmit: sendHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"newMessageInput\",\n    type: \"text\",\n    maxLength: \"50\",\n    name: \"newMessageInput\",\n    className: \"materialize-textarea\",\n    placeholder: \"Your message\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn pink lighten-3\",\n    style: {\n      marginLeft: '0.75rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Send\")))))));\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/ChatWorkerComp.js"],"names":["React","useContext","useState","useEffect","useCallback","useRef","AuthContext","СhatArea","ChatWorker","chat","token","chatId","socket","allMessages","auth","userId","news","setNews","onlineUsers","setOnlineUsers","listMessages","setListMessages","sendHandler","event","preventDefault","newMessageFromClient","target","elements","newMessageInput","value","emit","createSocket","on","newMessage","onUsers","logins","map","i","login","console","log","oldMessages","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","marginTop","width","marginLeft","chatname","index","length"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport {useState, useEffect, useCallback, useRef} from 'react'\nimport {AuthContext} from '../context/AuthContext'\nimport {СhatArea} from './ChatAreaComp'\n\n\n\nexport const ChatWorker =({ chat, token, chatId, socket, allMessages}) => {\n\n  const auth = useContext(AuthContext)\n  const userId = auth.userId\n  \n  // Indicator for updating component\n  // By default instance of listMessages is the same\n  // On every iteration, useState don't see changes\n  /* eslint-disable-next-line */\n  const [news, setNews] = useState(null)\n\n  const [onlineUsers, setOnlineUsers] = useState([])\n  const [listMessages, setListMessages] = useState([])\n\n\n  var sendHandler = (event) => {\n    event.preventDefault()\n    const newMessageFromClient = event.target.elements.newMessageInput.value\n    event.target.elements.newMessageInput.value = null\n    socket.emit('New message from client', newMessageFromClient, chatId, userId)\n  }\n\n  \n  // Initialize socket listeners and emit when user connected\n  const createSocket = useCallback( () => {\n\n    socket.on('New user message from server', (newMessage) => {\n      setListMessages( allMessages(newMessage, null) )\n      setNews(newMessage)\n      // scrollToBottom()\n    })\n\n    socket.on('Refresh online users', (onUsers) => {\n      var logins = onUsers.map( i => i.login )\n      setOnlineUsers(logins)\n      console.log(logins)\n      // console.log(onlineUsers)\n      \n    })\n\n    socket.on('Old messages', async (oldMessages) => {\n      setListMessages( allMessages(null, oldMessages) )\n      // scrollToBottom()\n    })\n\n    // Make emit to server\n    socket.emit('Client just enter', chatId, userId)\n    \n    \n  /* eslint-disable-next-line */\n  }, [chatId, userId] )\n\n\n  // Run when page will loading\n  useEffect(() => {\n    createSocket()\n  }, [createSocket])\n\n\n  // AutoScroll down\n  const messagesEndRef = useRef(null)\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect ( () => {\n    if (listMessages) {\n      console.log('here: ', listMessages)\n    }\n  }, [news])\n\n  \n\n\n  // console.log(listMessages)\n          \n  return (\n  <div style={{marginTop: '2rem', width: '100%'}} >\n\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\n    {/* eslint-disable-next-line */}\n    <a hreaf=\"/\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\"> near_me </i> Chat </a>\n    {/* eslint-disable-next-line */}\n    <a href=\"#\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\">live_tv</i> *Video Call* </a>\n\n    <div className=\"row\">\n      <div className=\"col\" style={{marginLeft: '-0.75rem', width:'100%'}}>\n        <div className=\"card blue lighten-5\">\n\n\n        <div className=\"card-content black-text\" >\n          <span className=\"card-title pink-text\"> {chat.chatname} </span>\n          \n\n          <div id=\"online-users\">\n            <span className=\"card-title pink-text\" id=\"online-word\"> Online: {'\\u00A0'} </span>\n            { onlineUsers.map( (login, index) => {\n                return (\n                    <span key={index} id=\"one-online\"> {login}, {'\\u00A0'} </span>\n                )\n              })\n            }\n          </div>\n          \n          {/* Chat content component */}\n          { listMessages.length && <СhatArea listMessages={listMessages} messagesEndRef={messagesEndRef}></СhatArea> }\n\n        </div>\n\n        {/* Input Area */}\n        <div className=\"card-action\">\n\n          <form id=\"chat-form\" onSubmit={ sendHandler }>\n\n            <div className=\"input-field col s12\">\n              <input \n                id=\"newMessageInput\"\n                type=\"text\"\n                maxLength=\"50\"\n                name=\"newMessageInput\"\n                className=\"materialize-textarea\"\n                placeholder=\"Your message\"\n                autoComplete=\"off\"\n                />\n            </div>\n\n            <button \n              className=\"btn pink lighten-3\" \n              style={{ marginLeft: '0.75rem'}}>\n              Send\n            </button>\n\n          </form>\n        </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}