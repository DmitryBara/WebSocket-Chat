{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/ChatWorkerComp.js\";\nimport React, { useContext } from 'react';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { ChatWindow } from '../components/OneChatMessageComp'; // ???\n\nimport { AuthContext } from '../context/AuthContext';\nexport const ChatWorker = ({\n  chat,\n  token,\n  chatId,\n  socket,\n  allMessages\n}) => {\n  const auth = useContext(AuthContext);\n  const userId = auth.userId; // Indicator for updating component\n  // By default instance of listMessages is the same\n  // On every iteration, useState don't see changes\n\n  const [_, setNews] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [listMessages, setListMessages] = useState([]);\n\n  var sendHandler = event => {\n    event.preventDefault();\n    const newMessageFromClient = event.target.elements.newMessageInput.value;\n    event.target.elements.newMessageInput.value = null;\n    socket.emit('New message from client', newMessageFromClient, chatId, userId);\n  }; // Initialize socket listeners and emit when user connected\n\n\n  const createSocket = useCallback(() => {\n    socket.on('New user message from server', newMessage => {\n      setListMessages(allMessages(newMessage));\n      setNews(newMessage);\n      scrollToBottom();\n    });\n    socket.on('Refresh online users', onlineUsers => {\n      console.log('Сейчас онлайн: ', onlineUsers);\n    });\n    socket.on('Old messages', oldMessages => {\n      setListMessages(allMessages(oldMessages));\n      scrollToBottom();\n    }); // Make emit to server\n\n    socket.emit('Client just enter', chatId, userId);\n    /* eslint-disable-next-line */\n  }, [chatId, userId]); // Run when page will loading\n\n  useEffect(() => {\n    createSocket();\n  }, [createSocket]); // AutoScroll down\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '2rem',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    hreaf: \"/\",\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 59\n    }\n  }, \" near_me \"), \" Chat \"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 58\n    }\n  }, \"live_tv\"), \" *Video Call* \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    style: {\n      marginLeft: '-0.75rem',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card blue lighten-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content black-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title pink-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \" Chat: \", chat.chatname, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title pink-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \" Online: \", chat.chatname, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chat-zone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, listMessages.map((message, index) => {\n    // Working with datetime\n    var dt = message.date;\n    var s = dt.split('-').join(',').split('T').join(',').split(':').join(',').split('.').join(',').split(',');\n    var cur = new Date(s[0], s[1] - 1, s[2], s[3], s[4], s[5]);\n    var off = cur.getTimezoneOffset();\n    cur.setMinutes(cur.getMinutes() - off);\n    var datetime = cur.toLocaleString('ru-RU', {\n      timeZone: 'Europe/Moscow'\n    }); // it's dont work. set default time as in browser\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: message._id,\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"msg-author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, message.login, '\\u00A0'), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"msg-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, datetime), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"msg-text flow-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, message.text));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"chat-form\",\n    onSubmit: sendHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"newMessageInput\",\n    type: \"text\",\n    maxLength: \"50\",\n    name: \"newMessageInput\",\n    className: \"materialize-textarea\",\n    placeholder: \"Your message\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn pink lighten-3\",\n    style: {\n      marginLeft: '0.75rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Send\")))))));\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/ChatWorkerComp.js"],"names":["React","useContext","useState","useEffect","useCallback","useRef","ChatWindow","AuthContext","ChatWorker","chat","token","chatId","socket","allMessages","auth","userId","_","setNews","onlineUsers","setOnlineUsers","listMessages","setListMessages","sendHandler","event","preventDefault","newMessageFromClient","target","elements","newMessageInput","value","emit","createSocket","on","newMessage","scrollToBottom","console","log","oldMessages","messagesEndRef","current","scrollIntoView","behavior","marginTop","width","marginLeft","chatname","map","message","index","dt","date","s","split","join","cur","Date","off","getTimezoneOffset","setMinutes","getMinutes","datetime","toLocaleString","timeZone","_id","login","text"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport {useState, useEffect, useCallback, useRef} from 'react'\nimport {ChatWindow} from '../components/OneChatMessageComp' // ???\nimport {AuthContext} from '../context/AuthContext'\n\n\nexport const ChatWorker =({ chat, token, chatId, socket, allMessages}) => {\n\n  const auth = useContext(AuthContext)\n  const userId = auth.userId\n  \n  // Indicator for updating component\n  // By default instance of listMessages is the same\n  // On every iteration, useState don't see changes\n  const [_, setNews] = useState(null)\n\n  const [onlineUsers, setOnlineUsers] = useState([])\n\n  const [listMessages, setListMessages] = useState([])\n\n\n  var sendHandler = (event) => {\n    event.preventDefault()\n    const newMessageFromClient = event.target.elements.newMessageInput.value\n    event.target.elements.newMessageInput.value = null\n    socket.emit('New message from client', newMessageFromClient, chatId, userId)\n  }\n\n  \n  // Initialize socket listeners and emit when user connected\n  const createSocket = useCallback( () => {\n\n    socket.on('New user message from server', (newMessage) => {\n      setListMessages( allMessages(newMessage) )\n      setNews(newMessage)\n      scrollToBottom()\n    })\n\n    socket.on('Refresh online users', (onlineUsers) => {\n      console.log('Сейчас онлайн: ', onlineUsers)\n    })\n\n    socket.on('Old messages', (oldMessages) => {\n      setListMessages( allMessages(oldMessages) )\n      scrollToBottom()\n    })\n\n    // Make emit to server\n    socket.emit('Client just enter', chatId, userId)\n    \n  /* eslint-disable-next-line */\n  }, [chatId, userId] )\n\n\n  // Run when page will loading\n  useEffect(() => {\n    createSocket()\n  }, [createSocket])\n\n\n  // AutoScroll down\n  const messagesEndRef = useRef(null)\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n\n  return (\n  <div style={{marginTop: '2rem', width: '100%'}} >\n\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\n    {/* eslint-disable-next-line */}\n    <a hreaf=\"/\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\"> near_me </i> Chat </a>\n    {/* eslint-disable-next-line */}\n    <a href=\"#\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\">live_tv</i> *Video Call* </a>\n\n    <div className=\"row\">\n      <div className=\"col\" style={{marginLeft: '-0.75rem', width:'100%'}}>\n        <div className=\"card blue lighten-5\">\n\n\n        <div className=\"card-content black-text\" >\n          <span className=\"card-title pink-text\"> Chat: {chat.chatname} </span>\n          <span className=\"card-title pink-text\"> Online: {chat.chatname} </span>\n\n\n          {/* Chat Area */}\n          <div id=\"chat-zone\">\n\n            { listMessages.map( (message, index) => {\n\n              // Working with datetime\n              var dt = message.date\n              var s = dt.split('-').join(',').split('T').join(',').split(':').join(',').split('.').join(',').split(',')\n              var cur = new Date(s[0], s[1]-1, s[2], s[3], s[4], s[5])\n              var off = cur.getTimezoneOffset();\n              cur.setMinutes(cur.getMinutes() - off )\n              var datetime = cur.toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' }) // it's dont work. set default time as in browser\n\n              return (\n                <div key={message._id} style={{marginTop: '1rem'}}>\n\n                  <span className=\"msg-author\">\n                    {message.login}{'\\u00A0'}\n                  </span>\n\n                  <span className=\"msg-date\">\n                    { datetime }\n                  </span>\n\n                  <span className=\"msg-text flow-text\">\n                    {message.text}\n                  </span>\n                </div>\n              )\n            } ) }\n\n          <div ref={messagesEndRef} />\n          </div>\n\n\n        </div>\n          \n        {/* Input Area */}\n        <div className=\"card-action\">\n\n          <form id=\"chat-form\" onSubmit={ sendHandler }>\n\n            <div className=\"input-field col s12\">\n              <input \n                id=\"newMessageInput\"\n                type=\"text\"\n                maxLength=\"50\"\n                name=\"newMessageInput\"\n                className=\"materialize-textarea\"\n                placeholder=\"Your message\"\n                autoComplete=\"off\"\n                />\n            </div>\n\n            <button \n              className=\"btn pink lighten-3\" \n              style={{ marginLeft: '0.75rem'}}>\n              Send\n            </button>\n\n          </form>\n        </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}