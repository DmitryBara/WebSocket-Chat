{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nconst storageName = 'userData';\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false); // for correct refreshing page\n\n  const [userId, setUserId] = useState(null);\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(storageName);\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n  }, [login]);\n  return {\n    login,\n    logout,\n    token,\n    userId\n  };\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","storageName","useAuth","token","setToken","ready","setReady","userId","setUserId","login","jwtToken","id","localStorage","setItem","JSON","stringify","logout","removeItem","data","parse","getItem"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,SAA/B,QAA+C,OAA/C;AAEA,MAAMC,WAAW,GAAG,UAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC,CAF2B,CAEgB;;AAC3C,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMW,KAAK,GAAGV,WAAW,CAAE,CAACW,QAAD,EAAWC,EAAX,KAAkB;AAC3CP,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACAF,IAAAA,SAAS,CAACG,EAAD,CAAT;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqBZ,WAArB,EAAkCa,IAAI,CAACC,SAAL,CAAe;AAC/CR,MAAAA,MAAM,EAAEI,EADuC;AACnCR,MAAAA,KAAK,EAAEO;AAD4B,KAAf,CAAlC;AAGD,GAPwB,EAOtB,EAPsB,CAAzB;AASA,QAAMM,MAAM,GAAGjB,WAAW,CAAE,MAAM;AAChCK,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,YAAY,CAACK,UAAb,CAAwBhB,WAAxB;AACD,GAJyB,EAIvB,EAJuB,CAA1B;AAMAD,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMkB,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBnB,WAArB,CAAX,CAAb;;AAEA,QAAIiB,IAAI,IAAIA,IAAI,CAACf,KAAjB,EAAwB;AACtBM,MAAAA,KAAK,CAACS,IAAI,CAACf,KAAN,EAAae,IAAI,CAACX,MAAlB,CAAL;AACD;AACF,GANQ,EAMN,CAACE,KAAD,CANM,CAAT;AAQA,SAAO;AAACA,IAAAA,KAAD;AAAQO,IAAAA,MAAR;AAAgBb,IAAAA,KAAhB;AAAuBI,IAAAA;AAAvB,GAAP;AACD,CA7BM","sourcesContent":["import {useState, useCallback, useEffect} from 'react'\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null)\n  const [ready, setReady] = useState(false)  // for correct refreshing page\n  const [userId, setUserId] = useState(null)\n\n  const login = useCallback( (jwtToken, id) => {\n    setToken(jwtToken)\n    setUserId(id)\n\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id, token: jwtToken\n    }))\n  }, [])\n\n  const logout = useCallback( () => {\n    setToken(null)\n    setUserId(null)\n    localStorage.removeItem(storageName)\n  }, [])\n\n  useEffect( () => {\n    const data = JSON.parse(localStorage.getItem(storageName))\n\n    if (data && data.token) {\n      login(data.token, data.userId)\n    }\n  }, [login])\n\n  return {login, logout, token, userId}\n}"]},"metadata":{},"sourceType":"module"}