{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/ChatroomsPage.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { Loader } from '../components/LoaderComp';\nimport { ChatWorker } from '../components/ChatWorkerComp';\nexport const ChatroomsPage = () => {\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [chatrooms, setChatrooms] = useState(null);\n  const getChatrooms = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/chat/chatrooms`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setChatrooms(fetched); // console.log(fetched)\n\n      chatrooms = fetched;\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    getChatrooms();\n  }, [getChatrooms]); // If still loading data from backend\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"blue-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"All Chatrooms\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, chatrooms.map((chat, index) => {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"collection-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Alvin\");\n  })));\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/ChatroomsPage.js"],"names":["React","useCallback","useContext","useEffect","useState","useParams","useHttp","AuthContext","Loader","ChatWorker","ChatroomsPage","token","request","loading","chatrooms","setChatrooms","getChatrooms","fetched","Authorization","e","map","chat","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,MAAR,QAAqB,0BAArB;AACA,SAAQC,UAAR,QAAyB,8BAAzB;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAEjC,QAAM;AAACC,IAAAA;AAAD,MAAUT,UAAU,CAACK,WAAD,CAA1B;AACA,QAAM;AAACK,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBP,OAAO,EAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAGA,QAAMY,YAAY,GAAGf,WAAW,CAAC,YAAY;AAC3C,QAAI;AACF,YAAMgB,OAAO,GAAG,MAAML,OAAO,CAC1B,qBAD0B,EAE3B,KAF2B,EAG3B,IAH2B,EAI3B;AAACM,QAAAA,aAAa,EAAG,UAASP,KAAM;AAAhC,OAJ2B,CAA7B;AAMAI,MAAAA,YAAY,CAACE,OAAD,CAAZ,CAPE,CAQF;;AACAH,MAAAA,SAAS,GAAGG,OAAZ;AACD,KAVD,CAUE,OAAOE,CAAP,EAAU,CAAE;AACf,GAZ+B,EAY7B,CAACR,KAAD,EAAQC,OAAR,CAZ6B,CAAhC;AAcAT,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT,CArBiC,CAyB/B;;AACA,MAAIH,OAAJ,EAAa;AACX,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAEH,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,CAACM,GAAV,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,wBACE;AAAG,MAAA,IAAI,EAAC,IAAR;AAAa,MAAA,SAAS,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAGD,GAJA,CADH,CAFF,CADF;AAgBD,CA9CM","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport {useHttp} from '../hooks/http.hook'\nimport {AuthContext} from '../context/AuthContext'\nimport {Loader} from '../components/LoaderComp'\nimport {ChatWorker} from '../components/ChatWorkerComp'\n\n\nexport const ChatroomsPage = () => {\n\n  const {token} = useContext(AuthContext)\n  const {request, loading} = useHttp()\n  const [chatrooms, setChatrooms] = useState(null)\n\n\n  const getChatrooms = useCallback(async () => {\n    try {\n      const fetched = await request (\n        `/api/chat/chatrooms`,\n        'GET',\n        null,\n        {Authorization: `Bearer ${token}`}\n      )\n      setChatrooms(fetched) \n      // console.log(fetched)\n      chatrooms = fetched\n    } catch (e) {}\n  }, [token, request])\n\n  useEffect(() => {\n    getChatrooms()\n  }, [getChatrooms])\n\n    // If still loading data from backend\n    if (loading) {\n      return <Loader />\n    }\n\n  return (\n    <div>\n      <h1 className=\"blue-text\">All Chatrooms</h1>\n      <div className=\"collection\">\n        {chatrooms.map( (chat, index) => {\n          return (\n            <a href=\"#!\" className=\"collection-item\">Alvin</a>\n          )\n        } ) }\n        {/* <a href=\"#!\" className=\"collection-item\">Alvin</a> */}\n        {/* <a href=\"#!\" className=\"collection-item\">Alvin</a> */}\n        {/* <a href=\"#!\" className=\"collection-item\">Alvin</a> */}\n        {/* <a href=\"#!\" className=\"collection-item\">Alvin</a> */}\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}