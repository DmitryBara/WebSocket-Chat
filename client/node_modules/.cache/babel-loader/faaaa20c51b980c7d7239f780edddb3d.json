{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/All.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook'; // common function for two components\n\nfunction useFormHandler(initialValues) {\n  // Import myself created hooks and other hooks\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const message = useMessage();\n  const [form, setForm] = useState(initialValues);\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]); // Refreshing form inputs value onChange\n\n  const changeFormHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return request;\n} // function AuthRegister() {\n//     const {отсюда забираешь} = useFormHandler({email: '', login:'', password: ''});\n// }\n// // Import myself created hooks and other hooks\n// const {loading, error, request, clearError} = useHttp()\n// const message = useMessage()\n// const [form, setForm] = useState( {email: '', login:'', password: ''} )\n// useEffect( () => {\n//   message(error)\n//   clearError()\n// }, [error, message, clearError])\n// // Refreshing form inputs value onChange\n// const changeFormHandler = event => {\n//   setForm({...form, [event.target.name]: event.target.value })\n// }\n// // Make request() to backend from useHttpHook with body={...formfields}\n// // Get back data and render errors\n// // Handler for REGISTRATION form\n// const registerUserHandler = async () => {\n//   try {\n//     const data = await request('/register', 'POST', {...form})\n//     message(data.message)\n//   } catch (e) {} // errors already processed in useHttp hook\n// }\n// // Handler for LOGIN form\n// const loginUserHandler = async () => {\n//   try {\n//     const data = await request('/login', 'POST', {...form})\n//     message(data.message)\n//   } catch (e) {} \n// }\n// Component for Registration Form\n\n\nfunction AuthPageRegister() {\n  useFormHandler({\n    email: '',\n    login: '',\n    password: ''\n  });\n\n  const registerUserHandler = async () => {\n    try {\n      const data = await request('/register', 'POST', { ...form\n      });\n      message(data.message);\n    } catch (e) {} // errors already processed in useHttp hook\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"E-mail\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login\",\n    name: \"login\",\n    type: \"text\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Password\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue lighten-2\",\n    onClick: registerUserHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }\n  }, \"Register!\"));\n} // Component for Login Form\n\n\nfunction AuthPageLogin() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login\",\n    name: \"login\",\n    type: \"text\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Password\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue lighten-2\",\n    onClick: loginUserHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"Login!\"));\n}\n\nexport { AuthPageLogin, AuthPageRegister };","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/All.js"],"names":["React","useState","useEffect","useHttp","useMessage","useFormHandler","initialValues","loading","error","request","clearError","message","form","setForm","changeFormHandler","event","target","name","value","AuthPageRegister","email","login","password","registerUserHandler","data","e","AuthPageLogin","loginUserHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,UAAR,QAAyB,uBAAzB,C,CAIA;;AACA,SAASC,cAAT,CAA0BC,aAA1B,EAA0C;AACxC;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAwCP,OAAO,EAArD;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAEK,aAAF,CAAhC;AAEAJ,EAAAA,SAAS,CAAE,MAAM;AACfS,IAAAA,OAAO,CAACH,KAAD,CAAP;AACAE,IAAAA,UAAU;AACX,GAHQ,EAGN,CAACF,KAAD,EAAQG,OAAR,EAAiBD,UAAjB,CAHM,CAAT,CANwC,CAYxC;;AACA,QAAMI,iBAAiB,GAAGC,KAAK,IAAI;AACjCF,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACG,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA5C,KAAD,CAAP;AACD,GAFD;;AAIA,SAAOT,OAAP;AACC,C,CAED;AACA;AACA;AAOF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;;;AACF,SAASU,gBAAT,GAA4B;AAE1Bd,EAAAA,cAAc,CAAC;AAACe,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAC,EAAlB;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAAD,CAAd;;AAEA,QAAMC,mBAAmB,GAAG,YAAY;AACtC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMf,OAAO,CAAC,WAAD,EAAc,MAAd,EAAsB,EAAC,GAAGG;AAAJ,OAAtB,CAA1B;AACAD,MAAAA,OAAO,CAACa,IAAI,CAACb,OAAN,CAAP;AACD,KAHD,CAGE,OAAOc,CAAP,EAAU,CAAE,CAJwB,CAIvB;;AAChB,GALD;;AAQF,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,SAAS,EAAC,MAJZ;AAKE,IAAA,QAAQ,EAAEX,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CAFF,eAaE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,SAAS,EAAC,MAJZ;AAKE,IAAA,QAAQ,EAAEA,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CAbF,eAwBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,EAAC,MAJZ;AAKE,IAAA,QAAQ,EAAEA,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAxBF,eAkCA;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,OAAO,EAAES,mBAFX;AAGE,IAAA,QAAQ,EAAEhB,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlCA,CADF;AA2CE,C,CAGF;;;AACA,SAASmB,aAAT,GAAyB;AACzB,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,SAAS,EAAC,MAJZ;AAKE,IAAA,QAAQ,EAAEZ,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CAFJ,eAaI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,EAAC,MAJZ;AAKE,IAAA,QAAQ,EAAEA,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAbJ,eAuBI;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,OAAO,EAAEa,gBAFX;AAGE,IAAA,QAAQ,EAAEpB,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,CADF;AAgCI;;AAEF,SAAQmB,aAAR,EAAuBP,gBAAvB","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\n\n\n\n// common function for two components\nfunction useFormHandler ( initialValues ) {\n  // Import myself created hooks and other hooks\n  const {loading, error, request, clearError} = useHttp()\n  const message = useMessage()\n  const [form, setForm] = useState( initialValues )\n  \n  useEffect( () => {\n    message(error)\n    clearError()\n  }, [error, message, clearError])\n  \n  \n  // Refreshing form inputs value onChange\n  const changeFormHandler = event => {\n    setForm({...form, [event.target.name]: event.target.value })\n  }\n\n  return request\n  }\n\n  // function AuthRegister() {\n  //     const {отсюда забираешь} = useFormHandler({email: '', login:'', password: ''});\n  // }\n\n\n\n\n\n\n// // Import myself created hooks and other hooks\n// const {loading, error, request, clearError} = useHttp()\n// const message = useMessage()\n// const [form, setForm] = useState( {email: '', login:'', password: ''} )\n\n// useEffect( () => {\n//   message(error)\n//   clearError()\n// }, [error, message, clearError])\n\n\n// // Refreshing form inputs value onChange\n// const changeFormHandler = event => {\n//   setForm({...form, [event.target.name]: event.target.value })\n// }\n\n// // Make request() to backend from useHttpHook with body={...formfields}\n// // Get back data and render errors\n\n// // Handler for REGISTRATION form\n// const registerUserHandler = async () => {\n//   try {\n//     const data = await request('/register', 'POST', {...form})\n//     message(data.message)\n//   } catch (e) {} // errors already processed in useHttp hook\n// }\n// // Handler for LOGIN form\n// const loginUserHandler = async () => {\n//   try {\n//     const data = await request('/login', 'POST', {...form})\n//     message(data.message)\n//   } catch (e) {} \n// }\n\n\n  // Component for Registration Form\nfunction AuthPageRegister() {\n\n  useFormHandler({email: '', login:'', password: ''});\n\n  const registerUserHandler = async () => {\n    try {\n      const data = await request('/register', 'POST', {...form})\n      message(data.message)\n    } catch (e) {} // errors already processed in useHttp hook\n  }\n\n\nreturn (\n  <div className=\"input-container\">\n\n    <div className=\"input-field\">\n      <input \n        id=\"email\" \n        name=\"email\"\n        type=\"text\" \n        className=\"auth\" \n        onChange={changeFormHandler} \n        />\n      <label htmlFor=\"email\">E-mail</label>\n    </div>\n\n    <div className=\"input-field\">\n      <input \n        id=\"login\" \n        name=\"login\"\n        type=\"text\" \n        className=\"auth\" \n        onChange={changeFormHandler} \n        />\n      <label htmlFor=\"login\">Login</label>\n    </div>\n    \n    <div className=\"input-field\">\n      <input \n        id=\"password\" \n        name=\"password\"\n        type=\"password\" \n        className=\"auth\" \n        onChange={changeFormHandler} />\n      <label htmlFor=\"password\">Password</label>\n    </div>\n\n  <button \n    className=\"btn blue lighten-2\" \n    onClick={registerUserHandler}\n    disabled={loading} >\n    Register!\n  </button>\n\n</div>\n)}\n\n\n// Component for Login Form\nfunction AuthPageLogin() {\nreturn (\n  <div className=\"input-container\">\n\n      <div className=\"input-field\">\n        <input \n          id=\"login\" \n          name=\"login\"\n          type=\"text\" \n          className=\"auth\" \n          onChange={changeFormHandler} \n          />\n        <label htmlFor=\"login\">Login</label>\n      </div>\n      \n      <div className=\"input-field\">\n        <input \n          id=\"password\" \n          name=\"password\"\n          type=\"password\" \n          className=\"auth\" \n          onChange={changeFormHandler} />\n        <label htmlFor=\"password\">Password</label>\n      </div>\n\n      <button \n        className=\"btn blue lighten-2\" \n        onClick={loginUserHandler}\n        disabled={loading} >\n        Login!\n      </button>\n\n  </div>\n  )}\n\n  export {AuthPageLogin, AuthPageRegister}"]},"metadata":{},"sourceType":"module"}