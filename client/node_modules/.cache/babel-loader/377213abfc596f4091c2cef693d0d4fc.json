{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/ChatWorkerComp.js\";\nimport React, { useContext } from 'react';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nexport const ChatWorker = ({\n  chat,\n  token,\n  chatId,\n  socket,\n  allMessages\n}) => {\n  const auth = useContext(AuthContext);\n  const userId = auth.userId; // Indicator for updating component\n  // By default instance of listMessages is the same\n  // On every iteration, useState don't see changes\n\n  /* eslint-disable-next-line */\n\n  const [_, setNews] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [listMessages, setListMessages] = useState([]);\n\n  var sendHandler = event => {\n    event.preventDefault();\n    const newMessageFromClient = event.target.elements.newMessageInput.value;\n    event.target.elements.newMessageInput.value = null;\n    socket.emit('New message from client', newMessageFromClient, chatId, userId);\n  }; // Initialize socket listeners and emit when user connected\n\n\n  const createSocket = useCallback(() => {\n    console.log(socket);\n    socket.on('New user message from server', newMessage => {\n      setListMessages(allMessages(newMessage));\n      setNews(newMessage); // scrollToBottom()\n    });\n    socket.on('Refresh online users', onlineUsers => {\n      var logins = onlineUsers.map(i => i.login);\n      setOnlineUsers(logins);\n    });\n    socket.on('Old messages', oldMessages => {\n      setListMessages(allMessages(oldMessages)); // scrollToBottom()\n    }); // Make emit to server\n\n    socket.emit('Client just enter', chatId, userId);\n    /* eslint-disable-next-line */\n  }, [chatId, userId]); // Run when page will loading\n\n  useEffect(() => {\n    createSocket();\n  }, [createSocket]); // AutoScroll down\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  if (!onlineUsers) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \" No messages yet\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '2rem',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"link\", {\n      href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n      rel: \"stylesheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      hreaf: \"/\",\n      className: \"waves-effect waves-light btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 59\n      }\n    }, \" near_me \"), \" Chat \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"waves-effect waves-light btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 58\n      }\n    }, \"live_tv\"), \" *Video Call* \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      style: {\n        marginLeft: '-0.75rem',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card blue lighten-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content black-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card-title pink-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \" \", chat.chatname, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"online-users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card-title pink-text\",\n      id: \"online-word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \" Online: \", '\\u00A0', \" \"), onlineUsers.map((login, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        id: \"one-online\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \" \", login, \", \", '\\u00A0', \" \");\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chat-zone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, listMessages.map(message => {\n      // Working with datetime\n      var dt = message.date;\n      var s = dt.split('-').join(',').split('T').join(',').split(':').join(',').split('.').join(',').split(',');\n      var cur = new Date(s[0], s[1] - 1, s[2], s[3], s[4], s[5]);\n      var off = cur.getTimezoneOffset();\n      cur.setMinutes(cur.getMinutes() - off);\n      var datetime = cur.toLocaleString('ru-RU', {\n        timeZone: 'Europe/Moscow'\n      }); // it's dont work. set default time as in browser\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: message._id,\n        style: {\n          marginTop: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"msg-author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, message.login, '\\u00A0'), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"msg-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, datetime), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"msg-text flow-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      }, message.text));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: messagesEndRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"chat-form\",\n      onSubmit: sendHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"newMessageInput\",\n      type: \"text\",\n      maxLength: \"50\",\n      name: \"newMessageInput\",\n      className: \"materialize-textarea\",\n      placeholder: \"Your message\",\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn pink lighten-3\",\n      style: {\n        marginLeft: '0.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"Send\")))))));\n  }\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/ChatWorkerComp.js"],"names":["React","useContext","useState","useEffect","useCallback","useRef","AuthContext","ChatWorker","chat","token","chatId","socket","allMessages","auth","userId","_","setNews","onlineUsers","setOnlineUsers","listMessages","setListMessages","sendHandler","event","preventDefault","newMessageFromClient","target","elements","newMessageInput","value","emit","createSocket","console","log","on","newMessage","logins","map","i","login","oldMessages","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","marginTop","width","marginLeft","chatname","index","message","dt","date","s","split","join","cur","Date","off","getTimezoneOffset","setMinutes","getMinutes","datetime","toLocaleString","timeZone","_id","text"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport {useState, useEffect, useCallback, useRef} from 'react'\nimport {AuthContext} from '../context/AuthContext'\n\n\nexport const ChatWorker =({ chat, token, chatId, socket, allMessages}) => {\n\n  const auth = useContext(AuthContext)\n  const userId = auth.userId\n  \n  // Indicator for updating component\n  // By default instance of listMessages is the same\n  // On every iteration, useState don't see changes\n  /* eslint-disable-next-line */\n  const [_, setNews] = useState(null)\n\n  const [onlineUsers, setOnlineUsers] = useState([])\n  const [listMessages, setListMessages] = useState([])\n\n\n  var sendHandler = (event) => {\n    event.preventDefault()\n    const newMessageFromClient = event.target.elements.newMessageInput.value\n    event.target.elements.newMessageInput.value = null\n    socket.emit('New message from client', newMessageFromClient, chatId, userId)\n  }\n\n  \n  // Initialize socket listeners and emit when user connected\n  const createSocket = useCallback( () => {\n\n    console.log(socket)\n\n    socket.on('New user message from server', (newMessage) => {\n      setListMessages( allMessages(newMessage) )\n      setNews(newMessage)\n      // scrollToBottom()\n    })\n\n    socket.on('Refresh online users', (onlineUsers) => {\n      var logins = onlineUsers.map( i => i.login )\n      setOnlineUsers(logins)\n    })\n\n    socket.on('Old messages', (oldMessages) => {\n      setListMessages( allMessages(oldMessages) )\n      // scrollToBottom()\n    })\n\n    // Make emit to server\n    socket.emit('Client just enter', chatId, userId)\n    \n    \n  /* eslint-disable-next-line */\n  }, [chatId, userId] )\n\n\n  // Run when page will loading\n  useEffect(() => {\n    createSocket()\n  }, [createSocket])\n\n\n  // AutoScroll down\n  const messagesEndRef = useRef(null)\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  if (!onlineUsers) {\n    return (\n      <span> No messages yet</span>\n    )\n  } else {\n\n\n  return (\n  <div style={{marginTop: '2rem', width: '100%'}} >\n\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\n    {/* eslint-disable-next-line */}\n    <a hreaf=\"/\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\"> near_me </i> Chat </a>\n    {/* eslint-disable-next-line */}\n    <a href=\"#\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\">live_tv</i> *Video Call* </a>\n\n    <div className=\"row\">\n      <div className=\"col\" style={{marginLeft: '-0.75rem', width:'100%'}}>\n        <div className=\"card blue lighten-5\">\n\n\n        <div className=\"card-content black-text\" >\n          <span className=\"card-title pink-text\"> {chat.chatname} </span>\n          \n\n          <div id=\"online-users\">\n            <span className=\"card-title pink-text\" id=\"online-word\"> Online: {'\\u00A0'} </span>\n            { onlineUsers.map( (login, index) => {\n                return (\n                    <span key={index} id=\"one-online\"> {login}, {'\\u00A0'} </span>\n                )\n              })\n            }\n          </div>\n\n\n          {/* Chat Area */}\n          <div id=\"chat-zone\">\n\n            { listMessages.map( (message) => {\n\n              // Working with datetime\n              var dt = message.date\n              var s = dt.split('-').join(',').split('T').join(',').split(':').join(',').split('.').join(',').split(',')\n              var cur = new Date(s[0], s[1]-1, s[2], s[3], s[4], s[5])\n              var off = cur.getTimezoneOffset();\n              cur.setMinutes(cur.getMinutes() - off )\n              var datetime = cur.toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' }) // it's dont work. set default time as in browser\n\n              return (\n                <div key={message._id} style={{marginTop: '1rem'}}>\n\n                  <span className=\"msg-author\">\n                    {message.login}{'\\u00A0'}\n                  </span>\n\n                  <span className=\"msg-date\">\n                    { datetime }\n                  </span>\n\n                  <span className=\"msg-text flow-text\">\n                    {message.text}\n                  </span>\n                </div>\n              )\n            } ) }\n\n          <div ref={messagesEndRef} />\n          </div>\n\n\n        </div>\n          \n        {/* Input Area */}\n        <div className=\"card-action\">\n\n          <form id=\"chat-form\" onSubmit={ sendHandler }>\n\n            <div className=\"input-field col s12\">\n              <input \n                id=\"newMessageInput\"\n                type=\"text\"\n                maxLength=\"50\"\n                name=\"newMessageInput\"\n                className=\"materialize-textarea\"\n                placeholder=\"Your message\"\n                autoComplete=\"off\"\n                />\n            </div>\n\n            <button \n              className=\"btn pink lighten-3\" \n              style={{ marginLeft: '0.75rem'}}>\n              Send\n            </button>\n\n          </form>\n        </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  )\n}\n\n}"]},"metadata":{},"sourceType":"module"}