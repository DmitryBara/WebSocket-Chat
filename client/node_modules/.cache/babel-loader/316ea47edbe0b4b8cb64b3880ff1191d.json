{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/AuthPage_login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\nexport const AuthPageLogin = () => {\n  // import myself created hooks and other hooks\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const message = useMessage();\n  const [form, setForm] = useState({\n    email: '',\n    login: '',\n    password: ''\n  });\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]); // refreshing form onChange\n\n  const changeFormHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  }; // for login\n\n\n  const loginUserHandler = async () => {\n    try {\n      const data = await request('/login', 'POST', { ...form\n      });\n      message(data.message);\n    } catch (e) {}\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"row\">\n    //   <div className=\"col s6 offset-s3\">\n    //     <div className=\"card pink lighten-3\">\n    // <div className=\"card-content white-text\">\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"login\",\n      name: \"login\",\n      type: \"text\",\n      className: \"auth\",\n      placeholder: \"Input your login\",\n      onChange: changeFormHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      className: \"auth\",\n      placeholder: \"Input your password\",\n      onChange: changeFormHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, \"Password\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn blue lighten-2\",\n      onClick: loginUserHandler,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Login!\")) //     </div>\n    //   </div>\n    // </div>\n\n  );\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/AuthPage_login.js"],"names":["React","useState","useEffect","useHttp","useMessage","AuthPageLogin","loading","error","request","clearError","message","form","setForm","email","login","password","changeFormHandler","event","target","name","value","loginUserHandler","data","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAwCN,OAAO,EAArD;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAE;AAACY,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAC,EAAlB;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAAF,CAAhC;AAEAb,EAAAA,SAAS,CAAE,MAAM;AACfQ,IAAAA,OAAO,CAACH,KAAD,CAAP;AACAE,IAAAA,UAAU;AACX,GAHQ,EAGN,CAACF,KAAD,EAAQG,OAAR,EAAiBD,UAAjB,CAHM,CAAT,CANiC,CAYjC;;AACA,QAAMO,iBAAiB,GAAGC,KAAK,IAAI;AACjCL,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACM,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA5C,KAAD,CAAP;AACD,GAFD,CAbiC,CAkBjC;;;AACA,QAAMC,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMd,OAAO,CAAC,QAAD,EAAW,MAAX,EAAmB,EAAC,GAAGG;AAAJ,OAAnB,CAA1B;AACAD,MAAAA,OAAO,CAACY,IAAI,CAACZ,OAAN,CAAP;AACD,KAHD,CAGE,OAAOa,CAAP,EAAU,CAAE;AACf,GALD;;AAQA;AAAA;AACE;AACA;AACA;AACM;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,MAJZ;AAKE,MAAA,WAAW,EAAC,kBALd;AAME,MAAA,QAAQ,EAAEP,iBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CAFF,eAcE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,SAAS,EAAC,MAJZ;AAKE,MAAA,WAAW,EAAC,qBALd;AAME,MAAA,QAAQ,EAAEA,iBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAdF,CAJJ,eA8BI;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,OAAO,EAAEK,gBAFX;AAGE,MAAA,QAAQ,EAAEf,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BJ,CALR,CA4CE;AACA;AACA;;AA9CF;AAgDD,CA3EM","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\n\nexport const AuthPageLogin = () => {\n  // import myself created hooks and other hooks\n  const {loading, error, request, clearError} = useHttp()\n  const message = useMessage()\n  const [form, setForm] = useState( {email: '', login:'', password: ''} )\n\n  useEffect( () => {\n    message(error)\n    clearError()\n  }, [error, message, clearError])\n\n\n  // refreshing form onChange\n  const changeFormHandler = event => {\n    setForm({...form, [event.target.name]: event.target.value })\n  }\n\n\n  // for login\n  const loginUserHandler = async () => {\n    try {\n      const data = await request('/login', 'POST', {...form})\n      message(data.message)\n    } catch (e) {} \n  }\n\n    \n  return (\n    // <div className=\"row\">\n    //   <div className=\"col s6 offset-s3\">\n    //     <div className=\"card pink lighten-3\">\n          // <div className=\"card-content white-text\">\n          <div>\n\n          \n\n              <div className=\"input-container\">\n\n                <div className=\"input-field\">\n                  <input \n                    id=\"login\" \n                    name=\"login\"\n                    type=\"text\" \n                    className=\"auth\" \n                    placeholder=\"Input your login\"\n                    onChange={changeFormHandler} \n                    />\n                  <label htmlFor=\"login\">Login</label>\n                </div>\n                \n                <div className=\"input-field\">\n                  <input \n                    id=\"password\" \n                    name=\"password\"\n                    type=\"password\" \n                    className=\"auth\" \n                    placeholder=\"Input your password\"\n                    onChange={changeFormHandler} />\n                  <label htmlFor=\"password\">Password</label>\n                </div>\n              </div>\n\n              <button \n                className=\"btn blue lighten-2\" \n                onClick={loginUserHandler}\n                disabled={loading} >\n                Login!\n              </button>\n          \n\n          </div>\n    //     </div>\n    //   </div>\n    // </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}