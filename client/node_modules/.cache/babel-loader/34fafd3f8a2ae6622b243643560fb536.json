{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/All.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook'; // Import myself created hooks and other hooks\n\nconst {\n  loading,\n  error,\n  request,\n  clearError\n} = useHttp();\nconst message = useMessage();\nconst [form, setForm] = useState({\n  email: '',\n  login: '',\n  password: ''\n});\nuseEffect(() => {\n  message(error);\n  clearError();\n}, [error, message, clearError]); // Refreshing form inputs value onChange\n\nconst changeFormHandler = event => {\n  setForm({ ...form,\n    [event.target.name]: event.target.value\n  });\n}; // Make request() to backend from useHttpHook with body={...formfields}\n// Get back data and render errors\n// Handler for REGISTRATION form\n\n\nconst registerUserHandler = async () => {\n  try {\n    const data = await request('/register', 'POST', { ...form\n    });\n    message(data.message);\n  } catch (e) {} // errors already processed in useHttp hook\n\n}; // Handler for LOGIN form\n\n\nconst loginUserHandler = async () => {\n  try {\n    const data = await request('/login', 'POST', { ...form\n    });\n    message(data.message);\n  } catch (e) {}\n}; // Component for Registration Form\n\n\nfunction AuthPageRegister() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"E-mail\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login\",\n    name: \"login\",\n    type: \"text\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Password\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue lighten-2\",\n    onClick: registerUserHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }\n  }, \"Register!\"));\n} // Component for Login Form\n\n\nfunction AuthPageLogin() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login\",\n    name: \"login\",\n    type: \"text\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"auth\",\n    onChange: changeFormHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Password\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue lighten-2\",\n    onClick: loginUserHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Login!\"));\n}\n\nexport { AuthPageLogin, AuthPageRegister };","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/All.js"],"names":["React","useState","useEffect","useHttp","useMessage","loading","error","request","clearError","message","form","setForm","email","login","password","changeFormHandler","event","target","name","value","registerUserHandler","data","e","loginUserHandler","AuthPageRegister","AuthPageLogin"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\n\n\n\n// Import myself created hooks and other hooks\nconst {loading, error, request, clearError} = useHttp()\nconst message = useMessage()\nconst [form, setForm] = useState( {email: '', login:'', password: ''} )\n\nuseEffect( () => {\n  message(error)\n  clearError()\n}, [error, message, clearError])\n\n\n// Refreshing form inputs value onChange\nconst changeFormHandler = event => {\n  setForm({...form, [event.target.name]: event.target.value })\n}\n\n// Make request() to backend from useHttpHook with body={...formfields}\n// Get back data and render errors\n\n// Handler for REGISTRATION form\nconst registerUserHandler = async () => {\n  try {\n    const data = await request('/register', 'POST', {...form})\n    message(data.message)\n  } catch (e) {} // errors already processed in useHttp hook\n}\n// Handler for LOGIN form\nconst loginUserHandler = async () => {\n  try {\n    const data = await request('/login', 'POST', {...form})\n    message(data.message)\n  } catch (e) {} \n}\n\n\n  // Component for Registration Form\nfunction AuthPageRegister() {\nreturn (\n  <div className=\"input-container\">\n\n    <div className=\"input-field\">\n      <input \n        id=\"email\" \n        name=\"email\"\n        type=\"text\" \n        className=\"auth\" \n        onChange={changeFormHandler} \n        />\n      <label htmlFor=\"email\">E-mail</label>\n    </div>\n\n    <div className=\"input-field\">\n      <input \n        id=\"login\" \n        name=\"login\"\n        type=\"text\" \n        className=\"auth\" \n        onChange={changeFormHandler} \n        />\n      <label htmlFor=\"login\">Login</label>\n    </div>\n    \n    <div className=\"input-field\">\n      <input \n        id=\"password\" \n        name=\"password\"\n        type=\"password\" \n        className=\"auth\" \n        onChange={changeFormHandler} />\n      <label htmlFor=\"password\">Password</label>\n    </div>\n\n  <button \n    className=\"btn blue lighten-2\" \n    onClick={registerUserHandler}\n    disabled={loading} >\n    Register!\n  </button>\n\n</div>\n)}\n\n\n// Component for Login Form\nfunction AuthPageLogin() {\nreturn (\n  <div className=\"input-container\">\n\n      <div className=\"input-field\">\n        <input \n          id=\"login\" \n          name=\"login\"\n          type=\"text\" \n          className=\"auth\" \n          onChange={changeFormHandler} \n          />\n        <label htmlFor=\"login\">Login</label>\n      </div>\n      \n      <div className=\"input-field\">\n        <input \n          id=\"password\" \n          name=\"password\"\n          type=\"password\" \n          className=\"auth\" \n          onChange={changeFormHandler} />\n        <label htmlFor=\"password\">Password</label>\n      </div>\n\n      <button \n        className=\"btn blue lighten-2\" \n        onClick={loginUserHandler}\n        disabled={loading} >\n        Login!\n      </button>\n\n  </div>\n  )}\n\n  export {AuthPageLogin, AuthPageRegister}"]},"metadata":{},"sourceType":"module"}