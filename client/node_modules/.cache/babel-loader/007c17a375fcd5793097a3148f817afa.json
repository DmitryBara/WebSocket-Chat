{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/ChatWorkerComp.js\";\nimport React, { useContext } from 'react';\nimport { ChatWindow } from '../components/ChatWindowComp'; // ???\n\nimport { AuthContext } from '../context/AuthContext';\nimport openSocket from 'socket.io-client';\nexport const ChatWorker = ({\n  chat,\n  token,\n  chatId\n}) => {\n  const auth = useContext(AuthContext);\n  const currentUserId = auth.userId; // Open socket for current client\n\n  const socket = openSocket(); // Make emit for server to get old message in this chat. Second parametr count=50 is optional\n  // Backend server will turn this user in onilne status\n\n  const oldMessageCount = 50;\n  socket.emit('Client just enter', chatId, currentUserId, oldMessageCount);\n  socket.on('Old messages', prevMsg => console.log(prevMsg)); // All user will accept this info, include current user\n\n  socket.on('New user connected to chatroom', user => {\n    console.log(user);\n  }); // Accept new user messages from server\n\n  socket.on('New user message from server', (text, user) => console.log(text, user)); // socket.on('New userMessage from server', (usrMessage, currentChatId, usrId) => {\n  //   console.log(usrMessage, currentChatId, usrId)\n  // })\n\n  const sendHandler = event => {\n    event.preventDefault();\n    const newMessageFromClient = event.target.elements.newMessageInput.value;\n    event.target.elements.newMessageInput.value = null; // Emit this message to server socket\n\n    socket.emit('New message from client', newMessageFromClient, chatId, currentUserId);\n  }; // make request with newMessage\n  // const sendHandler = async (e) => {\n  //   e.preventDefault()\n  //   try {\n  //     const fetched = await request (\n  //       `/api/chatworker/chatrooms/${chatId}/send_new_message`,\n  //       'POST',\n  //       {text: newMessage},\n  //       {Authorization: `Bearer ${token}`}\n  //     )\n  //     // create event for socket on server side\n  //     // socket.emit('New message from client', { data: 'Hello Server' })\n  //     console.log(fetched) \n  //   } catch (e) {}\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '2rem',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    hreaf: \"/\",\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 59\n    }\n  }, \" near_me \"), \" Chat \"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 58\n    }\n  }, \"insert_emoticon\"), \" *Members* \"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 58\n    }\n  }, \"live_tv\"), \" *Video Call* \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    style: {\n      marginLeft: '-0.75rem',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card blue lighten-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatWindow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"chat-form\",\n    onSubmit: sendHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"newMessageInput\",\n    name: \"newMessageInput\",\n    className: \"materialize-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Your Message\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn pink lighten-3\",\n    style: {\n      marginLeft: '0.75rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Send\")))))));\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/ChatWorkerComp.js"],"names":["React","useContext","ChatWindow","AuthContext","openSocket","ChatWorker","chat","token","chatId","auth","currentUserId","userId","socket","oldMessageCount","emit","on","prevMsg","console","log","user","text","sendHandler","event","preventDefault","newMessageFromClient","target","elements","newMessageInput","value","marginTop","width","marginLeft"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport {ChatWindow} from '../components/ChatWindowComp' // ???\nimport {AuthContext} from '../context/AuthContext'\nimport openSocket from 'socket.io-client'\n\n\n\nexport const ChatWorker =({ chat, token, chatId}) => {\n\n  const auth = useContext(AuthContext)\n  const currentUserId = auth.userId\n\n  // Open socket for current client\n  const socket = openSocket()\n\n \n\n  // Make emit for server to get old message in this chat. Second parametr count=50 is optional\n  // Backend server will turn this user in onilne status\n  const oldMessageCount = 50\n  socket.emit('Client just enter', chatId, currentUserId, oldMessageCount)\n  socket.on('Old messages', (prevMsg) => console.log(prevMsg))\n\n  // All user will accept this info, include current user\n  socket.on('New user connected to chatroom', (user) => { console.log(user) })\n\n  // Accept new user messages from server\n  socket.on('New user message from server', (text, user) => console.log(text, user))\n  \n  // socket.on('New userMessage from server', (usrMessage, currentChatId, usrId) => {\n  //   console.log(usrMessage, currentChatId, usrId)\n  // })\n\n\n\n  const sendHandler = (event) => {\n    event.preventDefault()\n    const newMessageFromClient = event.target.elements.newMessageInput.value\n    event.target.elements.newMessageInput.value = null\n\n    // Emit this message to server socket\n    socket.emit('New message from client', newMessageFromClient, chatId, currentUserId)\n  }\n\n  // make request with newMessage\n  // const sendHandler = async (e) => {\n  //   e.preventDefault()\n  //   try {\n  //     const fetched = await request (\n  //       `/api/chatworker/chatrooms/${chatId}/send_new_message`,\n  //       'POST',\n  //       {text: newMessage},\n  //       {Authorization: `Bearer ${token}`}\n  //     )\n  //     // create event for socket on server side\n  //     // socket.emit('New message from client', { data: 'Hello Server' })\n  //     console.log(fetched) \n  //   } catch (e) {}\n  // }\n\n\n\n  return (\n  <div style={{marginTop: '2rem', width: '100%'}} >\n\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\n    {/* eslint-disable-next-line */}\n    <a hreaf=\"/\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\"> near_me </i> Chat </a>\n    {/* eslint-disable-next-line */}\n    <a href=\"#\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\">insert_emoticon</i> *Members* </a>\n    {/* eslint-disable-next-line */}\n    <a href=\"#\" className=\"waves-effect waves-light btn\"><i className=\"material-icons right\">live_tv</i> *Video Call* </a>\n\n    <div className=\"row\">\n      <div className=\"col\" style={{marginLeft: '-0.75rem', width:'100%'}}>\n        <div className=\"card blue lighten-5\">\n          \n        <ChatWindow />\n\n          <div className=\"card-action\">\n\n            <form id=\"chat-form\" onSubmit={ sendHandler }>\n\n              <div className=\"input-field col s12\">\n                <textarea \n                  id=\"newMessageInput\"\n                  name=\"newMessageInput\"\n                  className=\"materialize-textarea\"\n                  />\n                <label htmlFor=\"textarea\">Your Message</label>\n              </div>\n\n              <button \n                className=\"btn pink lighten-3\" \n                style={{ marginLeft: '0.75rem'}}>\n                Send\n              </button>\n\n            </form>\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}