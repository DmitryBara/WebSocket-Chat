{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/AuthComp.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\nimport { AuthContext } from '../context/AuthContext'; // Common resourses for both components (custom hook)\n\nfunction useFormHandler(formInputValues) {\n  // Import myself created hooks and other hooks\n  const [form, setForm] = useState(formInputValues);\n  const auth = useContext(AuthContext); // Show error message in case of backend errors\n\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const message = useMessage();\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]); // Refreshing form inputs value onChange\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return {\n    form,\n    loading,\n    message,\n    request,\n    changeHandler,\n    auth\n  };\n} // COMPONENT for Registration Form\n\n\nfunction AuthRegisterComp() {\n  // Init resourses: hooks, forms, handlers\n  const {\n    form,\n    loading,\n    message,\n    request,\n    changeHandler,\n    auth\n  } = useFormHandler({\n    email: '',\n    login: '',\n    password: ''\n  }); // Make request to backend and get back message (with errors or confirmation)\n\n  const submitHandler = async () => {\n    try {\n      const data = await request('/api/auth/registration', 'POST', { ...form\n      });\n      message(data.message); // in future here will be email confirm, but now make auto login\n      // repeat logic in AuthPageLogin component\n\n      if (data.message === \"User has been created\") {\n        const data = await request('/api/auth/login', 'POST', { ...form\n        });\n        auth.login(data.token, data.userId);\n      }\n    } catch (e) {} // errors already processed in useHttp hook\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    className: \"field\",\n    value: form.email,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"E-mail\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login\",\n    name: \"login\",\n    type: \"text\",\n    className: \"field\",\n    value: form.login,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"field\",\n    value: form.password,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Password\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue lighten-2\",\n    onClick: submitHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, \"Sign Up!\"));\n} // COMPONENT for Login Form\n\n\nfunction AuthLoginComp() {\n  // Init resourses: hooks, forms, handlers. Depends on uri\n  const {\n    form,\n    loading,\n    message,\n    request,\n    changeHandler,\n    auth\n  } = useFormHandler({\n    login: '',\n    password: ''\n  }); // Make request to backend\n\n  const submitHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', { ...form\n      });\n      message(data.message);\n      auth.login(data.token, data.userId);\n    } catch (e) {} // errors already processed in useHttp hook\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login\",\n    name: \"login\",\n    type: \"text\",\n    className: \"field\",\n    value: form.login,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"field\",\n    value: form.password,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Password\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue lighten-2\",\n    onClick: submitHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"Login!\"));\n}\n\nexport { AuthLoginComp, AuthRegisterComp };","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/AuthComp.js"],"names":["React","useState","useEffect","useContext","useHttp","useMessage","AuthContext","useFormHandler","formInputValues","form","setForm","auth","loading","error","request","clearError","message","changeHandler","event","target","name","value","AuthRegisterComp","email","login","password","submitHandler","data","token","userId","e","AuthLoginComp"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\n\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\nimport {AuthContext} from '../context/AuthContext'\n\n\n\n// Common resourses for both components (custom hook)\nfunction useFormHandler ( formInputValues ) {\n\n    // Import myself created hooks and other hooks\n    const [form, setForm] = useState( formInputValues )\n    const auth = useContext(AuthContext)\n\n    // Show error message in case of backend errors\n    const {loading, error, request, clearError} = useHttp()\n    const message = useMessage()\n    useEffect( () => {\n      message(error)\n      clearError()\n    }, [error, message, clearError])\n    \n    // Refreshing form inputs value onChange\n    const changeHandler = event => {\n      setForm({...form, [event.target.name]: event.target.value })\n    }\n\n    return {form, loading, message, request, changeHandler, auth}\n}\n\n\n\n\n// COMPONENT for Registration Form\nfunction AuthRegisterComp() {\n\n  // Init resourses: hooks, forms, handlers\n  const {form, loading, message, request, changeHandler, auth} = useFormHandler({email: '', login:'', password: ''});\n\n  // Make request to backend and get back message (with errors or confirmation)\n  const submitHandler = async () => {\n    try {\n      const data = await request('/api/auth/registration', 'POST', {...form})\n      message(data.message)\n\n      // in future here will be email confirm, but now make auto login\n      // repeat logic in AuthPageLogin component\n      if (data.message === \"User has been created\") {\n        const data = await request('/api/auth/login', 'POST', {...form})\n        auth.login(data.token, data.userId)\n      }\n\n    } catch (e) {} // errors already processed in useHttp hook\n  }\n\nreturn (\n  <div className=\"input-container\">\n\n    <div className=\"input-field\">\n      <input \n        id=\"email\" \n        name=\"email\"\n        type=\"text\" \n        className=\"field\"\n        value={form.email}\n        onChange={changeHandler} \n        />\n      <label htmlFor=\"email\">E-mail</label>\n    </div>\n\n    <div className=\"input-field\">\n      <input \n        id=\"login\" \n        name=\"login\"\n        type=\"text\" \n        className=\"field\"\n        value={form.login}\n        onChange={changeHandler} \n        />\n      <label htmlFor=\"login\">Login</label>\n    </div>\n    \n    <div className=\"input-field\">\n      <input \n        id=\"password\" \n        name=\"password\"\n        type=\"password\" \n        className=\"field\"\n        value={form.password}\n        onChange={changeHandler} />\n      <label htmlFor=\"password\">Password</label>\n    </div>\n\n  <button \n    className=\"btn blue lighten-2\" \n    onClick={submitHandler}\n    disabled={ loading}>\n    Sign Up!\n  </button>\n\n</div>\n)}\n\n\n\n\n// COMPONENT for Login Form\nfunction AuthLoginComp() {\n\n  // Init resourses: hooks, forms, handlers. Depends on uri\n  const {form, loading, message, request, changeHandler, auth} = useFormHandler({login:'', password: ''});\n\n  // Make request to backend\n  const submitHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', {...form})\n      message(data.message)\n      auth.login(data.token, data.userId)\n    } catch (e) {} // errors already processed in useHttp hook\n  }\n\nreturn (\n  <div className=\"input-container\">\n\n      <div className=\"input-field\">\n        <input \n          id=\"login\" \n          name=\"login\"\n          type=\"text\" \n          className=\"field\"\n          value={form.login}\n          onChange={changeHandler} \n          />\n        <label htmlFor=\"login\">Login</label>\n      </div>\n      \n      <div className=\"input-field\">\n        <input \n          id=\"password\" \n          name=\"password\"\n          type=\"password\" \n          className=\"field\" \n          value={form.password}\n          onChange={changeHandler} />\n        <label htmlFor=\"password\">Password</label>\n      </div>\n\n      <button \n        className=\"btn blue lighten-2\" \n        onClick={submitHandler}\n        disabled={loading} >\n        Login!\n      </button>\n\n  </div>\n  )}\n\n  export {AuthLoginComp, AuthRegisterComp}"]},"metadata":{},"sourceType":"module"}