{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/AuthPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, BrowserRouter, Link } from 'react-router-dom';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook';\nimport { AuthPageLogin } from './AuthPage-Login';\nimport { AuthPageRegister } from './AuthPage-Register'; // import {AuthPageRegister, AuthPageLogin} from './All'\n\nexport const AuthPage = () => {\n  // // Import myself created hooks and other hooks\n  // const {loading, error, request, clearError} = useHttp()\n  // const message = useMessage()\n  // const [form, setForm] = useState( {email: '', login:'', password: ''} )\n  // useEffect( () => {\n  //   message(error)\n  //   clearError()\n  // }, [error, message, clearError])\n  // // Refreshing form inputs value onChange\n  // const changeFormHandler = event => {\n  //   setForm({...form, [event.target.name]: event.target.value })\n  // }\n  // // Make request() to backend from useHttpHook with body={...formfields}\n  // // Get back data and render errors\n  // // Handler for REGISTRATION form\n  // const registerUserHandler = async () => {\n  //   try {\n  //     const data = await request('/register', 'POST', {...form})\n  //     message(data.message)\n  //   } catch (e) {} // errors already processed in useHttp hook\n  // }\n  // // Handler for LOGIN form\n  // const loginUserHandler = async () => {\n  //   try {\n  //     const data = await request('/login', 'POST', {...form})\n  //     message(data.message)\n  //   } catch (e) {} \n  // }\n  // // Component for Registration Form\n  // function AuthPageRegister1() {\n  // return (\n  //   <div className=\"input-container\">\n  //     <div className=\"input-field\">\n  //       <input \n  //         id=\"email\" \n  //         name=\"email\"\n  //         type=\"text\" \n  //         className=\"auth\" \n  //         onChange={changeFormHandler} \n  //         />\n  //       <label htmlFor=\"email\">E-mail</label>\n  //     </div>\n  //     <div className=\"input-field\">\n  //       <input \n  //         id=\"login\" \n  //         name=\"login\"\n  //         type=\"text\" \n  //         className=\"auth\" \n  //         onChange={changeFormHandler} \n  //         />\n  //       <label htmlFor=\"login\">Login</label>\n  //     </div>\n  //     <div className=\"input-field\">\n  //       <input \n  //         id=\"password\" \n  //         name=\"password\"\n  //         type=\"password\" \n  //         className=\"auth\" \n  //         onChange={changeFormHandler} />\n  //       <label htmlFor=\"password\">Password</label>\n  //     </div>\n  //   <button \n  //     className=\"btn blue lighten-2\" \n  //     onClick={registerUserHandler}\n  //     disabled={loading} >\n  //     Register!\n  //   </button>\n  // </div>\n  // )}\n  // // Component for Login Form\n  // function AuthPageLogin1() {\n  // return (\n  //   <div className=\"input-container\">\n  //       <div className=\"input-field\">\n  //         <input \n  //           id=\"login\" \n  //           name=\"login\"\n  //           type=\"text\" \n  //           className=\"auth\" \n  //           onChange={changeFormHandler} \n  //           />\n  //         <label htmlFor=\"login\">Login</label>\n  //       </div>\n  //       <div className=\"input-field\">\n  //         <input \n  //           id=\"password\" \n  //           name=\"password\"\n  //           type=\"password\" \n  //           className=\"auth\" \n  //           onChange={changeFormHandler} />\n  //         <label htmlFor=\"password\">Password</label>\n  //       </div>\n  //       <button \n  //         className=\"btn blue lighten-2\" \n  //         onClick={loginUserHandler}\n  //         disabled={loading} >\n  //         Login!\n  //       </button>\n  //   </div>\n  //   )}\n  // Root Component\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s6 offset-s3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card pink lighten-3\",\n    id: \"auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Authorizathion\"), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"p-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Only authenticated users can create and connect to chatrooms.\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/show-register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), '\\u00A0', '\\u00A0', '\\u00A0', /*#__PURE__*/React.createElement(Link, {\n    to: \"/show-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/show-register\",\n    component: AuthPageRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/show-login\",\n    component: AuthPageLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  })))))));\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/AuthPage.js"],"names":["React","useState","useEffect","Switch","Route","BrowserRouter","Link","useHttp","useMessage","AuthPageLogin","AuthPageRegister","AuthPage"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,aAAvB,EAAsCC,IAAtC,QAAiD,kBAAjD;AAEA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AAGA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,gBAAR,QAA+B,qBAA/B,C,CAEA;;AAIA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAE5B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,EAAE,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAG,IAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAFF,eAcA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdA,EAeC,QAfD,EAeW,QAfX,EAeqB,QAfrB,eAgBA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBA,eAkBA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAA6B,IAAA,SAAS,EAAED,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,SAAS,EAAED,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAlBA,CADF,CADF,CADF,CADA,CADF;AAkCD,CA9JM","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Switch, Route, BrowserRouter, Link} from 'react-router-dom'\n\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\n\n\nimport {AuthPageLogin} from './AuthPage-Login'\nimport {AuthPageRegister} from './AuthPage-Register'\n\n// import {AuthPageRegister, AuthPageLogin} from './All'\n\n\n\nexport const AuthPage = () => {\n\n  // // Import myself created hooks and other hooks\n  // const {loading, error, request, clearError} = useHttp()\n  // const message = useMessage()\n  // const [form, setForm] = useState( {email: '', login:'', password: ''} )\n\n  // useEffect( () => {\n  //   message(error)\n  //   clearError()\n  // }, [error, message, clearError])\n\n\n  // // Refreshing form inputs value onChange\n  // const changeFormHandler = event => {\n  //   setForm({...form, [event.target.name]: event.target.value })\n  // }\n\n  // // Make request() to backend from useHttpHook with body={...formfields}\n  // // Get back data and render errors\n\n  // // Handler for REGISTRATION form\n  // const registerUserHandler = async () => {\n  //   try {\n  //     const data = await request('/register', 'POST', {...form})\n  //     message(data.message)\n  //   } catch (e) {} // errors already processed in useHttp hook\n  // }\n  // // Handler for LOGIN form\n  // const loginUserHandler = async () => {\n  //   try {\n  //     const data = await request('/login', 'POST', {...form})\n  //     message(data.message)\n  //   } catch (e) {} \n  // }\n\n\n  // // Component for Registration Form\n  // function AuthPageRegister1() {\n  // return (\n  //   <div className=\"input-container\">\n\n  //     <div className=\"input-field\">\n  //       <input \n  //         id=\"email\" \n  //         name=\"email\"\n  //         type=\"text\" \n  //         className=\"auth\" \n  //         onChange={changeFormHandler} \n  //         />\n  //       <label htmlFor=\"email\">E-mail</label>\n  //     </div>\n\n  //     <div className=\"input-field\">\n  //       <input \n  //         id=\"login\" \n  //         name=\"login\"\n  //         type=\"text\" \n  //         className=\"auth\" \n  //         onChange={changeFormHandler} \n  //         />\n  //       <label htmlFor=\"login\">Login</label>\n  //     </div>\n      \n  //     <div className=\"input-field\">\n  //       <input \n  //         id=\"password\" \n  //         name=\"password\"\n  //         type=\"password\" \n  //         className=\"auth\" \n  //         onChange={changeFormHandler} />\n  //       <label htmlFor=\"password\">Password</label>\n  //     </div>\n\n  //   <button \n  //     className=\"btn blue lighten-2\" \n  //     onClick={registerUserHandler}\n  //     disabled={loading} >\n  //     Register!\n  //   </button>\n\n  // </div>\n  // )}\n\n\n  // // Component for Login Form\n  // function AuthPageLogin1() {\n  // return (\n  //   <div className=\"input-container\">\n  \n  //       <div className=\"input-field\">\n  //         <input \n  //           id=\"login\" \n  //           name=\"login\"\n  //           type=\"text\" \n  //           className=\"auth\" \n  //           onChange={changeFormHandler} \n  //           />\n  //         <label htmlFor=\"login\">Login</label>\n  //       </div>\n        \n  //       <div className=\"input-field\">\n  //         <input \n  //           id=\"password\" \n  //           name=\"password\"\n  //           type=\"password\" \n  //           className=\"auth\" \n  //           onChange={changeFormHandler} />\n  //         <label htmlFor=\"password\">Password</label>\n  //       </div>\n  \n  //       <button \n  //         className=\"btn blue lighten-2\" \n  //         onClick={loginUserHandler}\n  //         disabled={loading} >\n  //         Login!\n  //       </button>\n\n  //   </div>\n  //   )}\n    \n\n\n  // Root Component\n  return (\n    <BrowserRouter>\n    <div className=\"row\">\n      <div className=\"col s6 offset-s3\">\n        <div className=\"card pink lighten-3\" id='auth'>\n          <div className=\"card-content white-text\">\n            <span className=\"card-title\">Authorizathion</span>\n            <p id='p-up'>Only authenticated users can create and connect to chatrooms.</p>\n          \n          {/* <div className=\"card-action\">\n            <Link to='/show-login'>\n              <button className=\"btn blue lighten-2\">Log In</button>\n            </Link>\n\n            <Link to='/show-register'>\n              <button className=\"btn grey lighten-2 black-text\" id=\"sign-up\">Sign Up</button>\n            </Link>\n          </div> */}\n\n          <Link to='/show-register'>Sign Up</Link>\n          {'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n          <Link to='/show-login'>Log In</Link>\n          \n          <Switch>\n              <Route path='/show-register' component={AuthPageRegister} />\n              <Route path='/show-login' component={AuthPageLogin} />\n          </Switch>\n\n          </div>\n        </div>\n      </div>\n    </div> \n    </BrowserRouter>\n  )\n}"]},"metadata":{},"sourceType":"module"}