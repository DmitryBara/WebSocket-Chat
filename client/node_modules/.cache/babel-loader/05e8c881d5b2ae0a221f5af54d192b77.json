{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/AuthPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { useMessage } from '../hooks/message.hook'; // &&&&&?????\n\nimport { AuthPageLogin } from './AuthPage-Login';\nexport const AuthPage = () => {\n  // import myself created hooks and other hooks\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const message = useMessage();\n  const [form, setForm] = useState({\n    email: '',\n    login: '',\n    password: ''\n  });\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]); // refreshing form onChange\n  // const changeFormHandler = event => {\n  //   setForm({...form, [event.target.name]: event.target.value })\n  // }\n  // make request to backend from useHttpHook with form fields. Get back data\n  // const reqisterUserHandler = async () => {\n  //   try {\n  //     const data = await request('/register', 'POST', {...form})\n  //     message(data.message)\n  //   } catch (e) {} // errors already processed in useHttp hook\n  // }\n  // for login\n  // const loginUserHandler = async () => {\n  //   try {\n  //     const data = await request('/login', 'POST', {...form})\n  //     message(data.message)\n  //   } catch (e) {} \n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s6 offset-s3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card pink lighten-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Authorizathion\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Only authenticated users can create and connect to chatrooms.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue lighten-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn grey lighten-2 black-text\",\n    id: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"))))));\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/pages/AuthPage.js"],"names":["React","useState","useEffect","useHttp","useMessage","AuthPageLogin","AuthPage","loading","error","request","clearError","message","form","setForm","email","login","password"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,UAAR,QAAyB,uBAAzB,C,CAEA;;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAwCP,OAAO,EAArD;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAE;AAACa,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAC,EAAlB;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAAF,CAAhC;AAEAd,EAAAA,SAAS,CAAE,MAAM;AACfS,IAAAA,OAAO,CAACH,KAAD,CAAP;AACAE,IAAAA,UAAU;AACX,GAHQ,EAGN,CAACF,KAAD,EAAQG,OAAR,EAAiBD,UAAjB,CAHM,CAAT,CAN4B,CAY5B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAFF,eAqDA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,IAAA,SAAS,EAAC,+BAAlB;AAAkD,IAAA,EAAE,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CArDA,CADF,CADF,CADF,CADF;AAoED,CAtGM","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\n\n// &&&&&?????\nimport {AuthPageLogin} from './AuthPage-Login'\n\nexport const AuthPage = () => {\n  // import myself created hooks and other hooks\n  const {loading, error, request, clearError} = useHttp()\n  const message = useMessage()\n  const [form, setForm] = useState( {email: '', login:'', password: ''} )\n\n  useEffect( () => {\n    message(error)\n    clearError()\n  }, [error, message, clearError])\n\n\n  // refreshing form onChange\n  // const changeFormHandler = event => {\n  //   setForm({...form, [event.target.name]: event.target.value })\n  // }\n\n  // make request to backend from useHttpHook with form fields. Get back data\n  // const reqisterUserHandler = async () => {\n  //   try {\n  //     const data = await request('/register', 'POST', {...form})\n  //     message(data.message)\n  //   } catch (e) {} // errors already processed in useHttp hook\n  // }\n\n  // for login\n  // const loginUserHandler = async () => {\n  //   try {\n  //     const data = await request('/login', 'POST', {...form})\n  //     message(data.message)\n  //   } catch (e) {} \n  // }\n\n    \n  return (\n    <div className=\"row\">\n      <div className=\"col s6 offset-s3\">\n        <div className=\"card pink lighten-3\">\n          <div className=\"card-content white-text\">\n            <span className=\"card-title\">Authorizathion</span>\n            <p>Only authenticated users can create and connect to chatrooms.</p>\n          \n\n          {/* <div className=\"input-container\">\n              <div className=\"input-field\">\n                <input \n                  id=\"email\" \n                  name=\"email\"\n                  type=\"text\" \n                  className=\"auth\" \n                  placeholder=\"Input your email\"\n                  onChange={changeFormHandler} \n                  />\n                <label htmlFor=\"email\">E-mail</label>\n              </div>\n\n            <div className=\"input-field\">\n              <input \n                id=\"login\" \n                name=\"login\"\n                type=\"text\" \n                className=\"auth\" \n                placeholder=\"Input your login\"\n                onChange={changeFormHandler} \n                />\n              <label htmlFor=\"login\">Login</label>\n            </div>\n            \n            <div className=\"input-field\">\n              <input \n                id=\"password\" \n                name=\"password\"\n                type=\"password\" \n                className=\"auth\" \n                placeholder=\"Input your password\"\n                onChange={changeFormHandler} />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n          </div>\n\n          <button \n            className=\"btn blue lighten-2\" \n            onClick={reqisterUserHandler}\n            disabled={loading} >  {/* disble if still loading data from backend\n          \n          </button> */}\n          \n\n\n\n          \n          <div className=\"card-action\">\n            <button className=\"btn blue lighten-2\">Log In</button>\n            <button className=\"btn grey lighten-2 black-text\" id=\"sign-up\">Sign Up</button>\n          </div>\n\n          {/* <AuthPageLogin></AuthPageLogin> */}\n          </div>\n        </div>\n      </div>\n    </div> \n  )\n}"]},"metadata":{},"sourceType":"module"}