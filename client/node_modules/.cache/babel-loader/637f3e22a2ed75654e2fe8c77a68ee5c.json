{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/OneChatMessageComp.js\";\nimport React, { useEffect, useCallback } from 'react';\nexport const ChatWindow = ({\n  messageToShow\n}) => {\n  const allMessages = [];\n  console.log(messageToShow.length);\n  allMessages.push(...messageToShow);\n  console.log(allMessages.length);\n  console.log('shit: ', allMessages);\n  console.log(typeof allMessages); // if (!allMessages) {\n  //   return (\n  //     <div> No any messages yet </div> )\n  // }\n  // console.log('allMessages: ', allMessages)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, typeof allMessages);\n};","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/components/OneChatMessageComp.js"],"names":["React","useEffect","useCallback","ChatWindow","messageToShow","allMessages","console","log","length","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,WAA1B,QAA4C,OAA5C;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAsB;AAE9C,QAAMC,WAAW,GAAG,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAaH,aAAa,CAACI,MAA3B;AACAH,EAAAA,WAAW,CAACI,IAAZ,CAAiB,GAAGL,aAApB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAaF,WAAW,CAACG,MAAzB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,WAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,WAAnB,EAP8C,CAS9C;AACA;AACA;AACA;AACA;;AAEA,sBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,OAAOA,WAFX,CADN;AAaD,CA5BM","sourcesContent":["import React, {useEffect, useCallback} from 'react'\n\nexport const ChatWindow = ( {messageToShow} )=> {\n  \n  const allMessages = []\n  console.log( messageToShow.length )\n  allMessages.push(...messageToShow)\n  console.log( allMessages.length )\n  console.log('shit: ', allMessages)\n  console.log(typeof allMessages )\n\n  // if (!allMessages) {\n  //   return (\n  //     <div> No any messages yet </div> )\n  // }\n  // console.log('allMessages: ', allMessages)\n\n  return (\n        <div>\n          {/* { (allMessages).map( (item) => item.text +'\\n')} */}\n          { typeof allMessages }\n          {/* { allMessages.map( (message, index) => {\n            return (\n              <div>\n                {message.text}\n              </div>\n            )\n          } ) } */}\n        </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}