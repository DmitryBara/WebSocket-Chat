{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/JavaScript/express-chat/client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useAuth } from './hooks/auth.hook';\nimport { useRoutes } from './routes';\nimport { AuthContext } from './context/AuthContext';\nimport { Navbar } from './components/NavbarComp';\nimport { Loader } from './components/LoaderComp';\nimport 'materialize-css';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket();\n\nfunction App() {\n  const {\n    token,\n    login,\n    logout,\n    userId,\n    ready\n  } = useAuth();\n  const isAuthorized = !!token;\n  const routes = useRoutes(isAuthorized);\n\n  if (!ready) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }); // if authorization check still in process\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      logout,\n      userId,\n      isAuthorized\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, isAuthorized && /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, routes)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dmitry/Desktop/JavaScript/express-chat/client/src/App.js"],"names":["React","BrowserRouter","useAuth","useRoutes","AuthContext","Navbar","Loader","openSocket","socket","App","token","login","logout","userId","ready","isAuthorized","routes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAAQC,SAAR,QAAwB,UAAxB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,OAAO,iBAAP;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,MAAMC,MAAM,GAAGD,UAAU,EAAzB;;AAEA,SAASE,GAAT,GAAe;AAEb,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,MAAvB;AAA+BC,IAAAA;AAA/B,MAAwCZ,OAAO,EAArD;AACA,QAAMa,YAAY,GAAG,CAAC,CAACL,KAAvB;AACA,QAAMM,MAAM,GAAGb,SAAS,CAAEY,YAAF,CAAxB;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADU,CACQ;AACnB;;AAED,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,MAAhB;AAAwBC,MAAAA,MAAxB;AAAgCE,MAAAA;AAAhC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,YAAY,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,MADJ,CAFF,CADA,CADF;AAUD;;AAED,eAAeP,GAAf","sourcesContent":["import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport {useAuth} from './hooks/auth.hook'\nimport {useRoutes} from './routes'\nimport {AuthContext} from './context/AuthContext'\nimport {Navbar} from './components/NavbarComp'\nimport {Loader} from './components/LoaderComp'\nimport 'materialize-css'\n\nimport openSocket from 'socket.io-client'\nconst socket = openSocket()\n\nfunction App() {\n\n  const {token, login, logout, userId, ready} = useAuth()\n  const isAuthorized = !!token\n  const routes = useRoutes( isAuthorized )\n\n  if (!ready) {\n    return <Loader /> // if authorization check still in process\n  }\n\n  return (\n    <AuthContext.Provider value={{ token, login, logout, userId, isAuthorized }}>\n    <BrowserRouter>\n      { isAuthorized && <Navbar />}\n      <div className=\"container\">\n        { routes }\n      </div>\n    </BrowserRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}